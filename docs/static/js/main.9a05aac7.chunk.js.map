{"version":3,"sources":["helpers/fecth.js","types/types.js","actions/areas.js","actions/projectsQA.js","actions/resources.js","actions/ui.js","actions/auth.js","hooks/useForm.js","components/auth/LoginForm.js","pages/AuthPage.js","pages/LoadingPage.js","components/shared/sidebarData.js","components/shared/SidebarItem.js","components/shared/Sidebar.js","pages/AreasPage.js","components/cardAlerts/CardAlerts.js","components/CardAreas.js","components/cardProjects/CardProjectItem.js","components/cardProjects/CardProject.js","pages/HomePage.js","pages/ProjectsQAPage.js","pages/ResourcesPage.js","router/Dashboard.js","router/PrivateRoute.js","router/PublicRoute.js","router/RouterApp.js","reducers/areasReducer.js","reducers/authReducer.js","reducers/projectsQAReducer.js","reducers/resourcesReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","App.js","index.js"],"names":["baseUrl","process","REACT_APP_API_URL","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","types","areasLoaded","areas","type","payload","areaDeleted","id","areaCreated","area","areaUpdated","projectCreated","project","projectsQALoaded","projectsQA","projectsQADeleted","resourcesAllLoaded","resources","resourcesDeleted","resourcesCreated","resource","resourceUpdated","loading","login","finishChecking","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginForm","dispatch","useDispatch","email","password","formValues","className","src","alt","onSubmit","event","preventDefault","a","resp","json","ok","setItem","user","Date","getTime","uid","role","setTimeout","startLogin","onChange","placeholder","AuthPage","LoadingPage","sideBarData","SidebarItem","icon","title","link","to","Sidebar","map","sideItem","onClick","clear","AreasPage","_id","leader","percentage","openModalCreate","setOpenModalCreate","openModalUpdate","setOpenModalUpdate","updatedId","setUpdatedId","useSelector","state","handleDelete","startDeleteArea","e","console","log","required","newAreaUpdated","min","max","CardAlerts","surname1","surname2","CardAreas","color","currentPercentage","setcurrentPercentage","useEffect","viewBox","cx","cy","r","style","CardProjectItem","code","setCurrentPercentage","width","backgroundColor","CardProject","projects","HomePage","sort","b","card","moment","locale","now","nowDayPlus","add","ProjectsQAPage","toDate","startDate","setStartDate","endDate","setEndDate","platform","responsable","dateStart","dateEnd","hours","status","observations","oc","additionalHours","pe","startProjectQADelete","format","autoComplete","minDate","ResourcesPage","subArea","startDeleteResource","newResourceUpdated","Dashboard","exact","path","component","PrivateRoute","isAuthenticated","Component","rest","location","pathname","props","PublicRoute","RouterApp","auth","ui","cheking","rootReducer","combineReducers","action","filter","p","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a05aac7.chunk.js","sourcesContent":["\r\nconst baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nexport const fetchWithoutToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`;\r\n\r\n    if ( method === 'GET' ) {\r\n        return fetch( url );\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    };\r\n};\r\n\r\nexport const fetchWithToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if ( method === 'GET' ) {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    };\r\n};\r\n","\r\nexport const types = {\r\n\r\n    uiLoading: '[ui] Loading state',\r\n    uiFinishLoading: '[ui] Finished loading state',\r\n\r\n    authStartChecking: '[auth] Start cheking login state', \r\n    authCheckingFinish: '[auth] Finish cheking login state',\r\n    authStartLogin: '[auth] Start login state',\r\n    authLogin: '[auth] Login',\r\n    authStartRenewToken: '[auth] Start renew token',\r\n    authLogout: '[auth] Logout',\r\n\r\n    areasLoaded: '[areas] Loaded areas',\r\n    areasCleared: '[areas] Cleared areas',\r\n    areasDeleted: '[areas] Deleted area',\r\n    areasCreated: '[areas] Created areas',\r\n    areasUpdated: '[areas] Updated area',\r\n    \r\n    resourcesAllLoaded: '[resources] Loaded resources',\r\n    resourcesCleared: '[resources] Cleared resources',\r\n    resourcesDeleted: '[resources] Deleted resource',\r\n    resourcesCreated: '[resources] Created resources',\r\n    resourcesUpdated: '[resources] Updated resources',\r\n\r\n    projectsQALoaded: '[projectsQA] Loaded projects QA',\r\n    projectsQACleared: '[projectsQA] Cleared projects QA',\r\n    projectsQADeleted: '[projectsQA] Deleted projects QA',\r\n    projectsQACreated: '[projectsQA] Created projects QA',\r\n}","import { fetchWithToken } from \"../helpers/fecth\";\r\nimport { types } from \"../types/types\"\r\n\r\nexport const areasStartLoading = () => {\r\n    return async( dispatch ) => {\r\n\r\n        try {\r\n            \r\n            const resp = await fetchWithToken('areas');\r\n            const body = await resp.json();\r\n\r\n            dispatch(areasLoaded( body.areas ));\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nconst areasLoaded = ( areas ) => ({ \r\n    type: types.areasLoaded,\r\n    payload: areas\r\n});\r\n\r\n\r\nexport const clearedAreas = () => ({type: types.areasCleared });\r\n\r\nexport const startDeleteArea = (id) => {\r\n    return async( dispatch ) => {\r\n\r\n        // const resp = await fetchWithToken(`areas/${ id }, {}, 'DELETE'`);\r\n        // const body = await resp.json();\r\n\r\n        dispatch( areaDeleted(id));\r\n    }\r\n}\r\n\r\nconst areaDeleted = (id) => ({type: types.areasDeleted, payload: id })\r\n\r\nexport const startCreatedAreas = (area) => {\r\n    return async( dispatch ) => {\r\n        console.log(area)\r\n        dispatch( areaCreated(area) );\r\n    }\r\n}\r\n\r\nconst areaCreated = (area) => ({type: types.areasCreated, payload: area})\r\n\r\nexport const startUpdateArea = ( id, area) => {\r\n    return async( dispatch ) => {\r\n        \r\n        const newAreaUpdated = {\r\n            ...area,\r\n            _id: id,\r\n        }\r\n        dispatch( areaUpdated( newAreaUpdated ) )\r\n    }\r\n}\r\n\r\nconst areaUpdated = (area) => ({type: types.areasUpdated, payload: area});\r\n","import moment from \"moment\";\r\nimport { fetchWithToken } from \"../helpers/fecth\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const projectsQAStartLoading = () => {\r\n    return async( dispatch ) => {\r\n\r\n        try {\r\n            \r\n            //TODO: cambiar endpoint\r\n            const resp = await fetchWithToken('qaProjectsTemp');\r\n            const body = await resp.json();\r\n\r\n            const dateEnd = moment(body.projects[0].dateEnd).toDate();\r\n\r\n            console.log( dateEnd )\r\n\r\n            dispatch( projectsQALoaded( body.projects ));\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const startProjectsCreated = (project) => {\r\n    return async( dispatch ) => {\r\n        try {\r\n            \r\n            const resp = await fetchWithToken('qaProjectsTemp', project, 'POST');\r\n            const body = await resp.json();\r\n\r\n            project = {\r\n                _id: body.project._id,\r\n                ...project\r\n            }\r\n\r\n            dispatch(projectCreated( project ))\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst projectCreated = ( project ) => ({type: types.projectsQACreated, payload: project})\r\n\r\n\r\nconst projectsQALoaded = ( projectsQA ) => ({ \r\n    type: types.projectsQALoaded ,\r\n    payload: projectsQA\r\n});\r\n\r\n\r\nexport const clearedProjectsQA = () => ({type: types.projectsQACleared });\r\n\r\nexport const startProjectQADelete = (id) => {\r\n    return async( dispatch ) => {\r\n\r\n        const resp = await fetchWithToken(`qaProjectsTemp/${id}`, {} ,'DELETE');\r\n        const body = await resp.json();\r\n\r\n        console.log(body);\r\n\r\n        dispatch( projectsQADeleted(id) )\r\n    }\r\n}\r\n\r\nconst projectsQADeleted = (id) => ({type: types.projectsQADeleted, payload: id})\r\n","import { fetchWithToken } from \"../helpers/fecth\";\r\nimport { types } from \"../types/types\"\r\n\r\nexport const resourcesAllStartLoading = () => {\r\n    return async( dispatch ) => {\r\n\r\n        try {\r\n            \r\n            const resp = await fetchWithToken('resources');\r\n            const body = await resp.json();\r\n\r\n            dispatch( resourcesAllLoaded( body.resources ));\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst resourcesAllLoaded = ( resources ) => ({ \r\n    type: types.resourcesAllLoaded,\r\n    payload: resources\r\n});\r\n\r\n\r\nexport const clearedResources = () => ({type: types.resourcesCleared });\r\n\r\nexport const startDeleteResource = ( id ) => {\r\n    return async( dispatch ) => {\r\n\r\n        dispatch(resourcesDeleted(id))\r\n\r\n    }\r\n}\r\n\r\nconst resourcesDeleted = (id) => ({type: types.resourcesDeleted, payload: id})\r\n\r\nexport const startCreatedResources = (resource) => {\r\n    return async( dispatch ) => {\r\n        console.log(resource)\r\n        dispatch( resourcesCreated( resource ));\r\n    }\r\n}\r\n\r\nconst resourcesCreated = (resource) => ({type: types.resourcesCreated, payload: resource})\r\n\r\nexport const startUpdateResource = ( id, resource) => {\r\n    return async( dispatch ) => {\r\n        \r\n        const newResourceUpdated = {\r\n            ...resource,\r\n            _id: id,\r\n        }\r\n        dispatch( resourceUpdated( newResourceUpdated ) )\r\n    }\r\n}\r\n\r\nconst resourceUpdated = (resource) => ({type: types.resourcesUpdated, payload: resource})\r\n","import { types } from \"../types/types\"\r\n\r\n\r\nexport const startLoading = () => {\r\n    return async( dispatch ) => {\r\n        dispatch(loading());\r\n    }\r\n}\r\n\r\nconst loading = () => ({type: types.uiLoading });\r\n\r\nexport const finishLoading = () => ({ type: types.uiFinishLoading });","import { fetchWithoutToken, fetchWithToken } from \"../helpers/fecth\"\r\nimport { types } from \"../types/types\";\r\nimport { clearedAreas } from \"./areas\";\r\nimport { clearedProjectsQA } from \"./projectsQA\";\r\nimport { clearedResources } from \"./resources\";\r\nimport { finishLoading } from \"./ui\";\r\n\r\n\r\nexport const startLogin = ( email, password ) => {\r\n    return async( dispatch ) => {\r\n        \r\n        const resp = await fetchWithoutToken('auth', { email, password}, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.user.token );\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            \r\n            dispatch( login({\r\n                uid: body.user.uid,\r\n                name: body.user.name,\r\n                role: body.user.role\r\n            }));\r\n        }\r\n\r\n        setTimeout(() => {\r\n            dispatch( finishLoading());\r\n        }, 3500);\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nconst login = ( data ) => ({ type: types.authLogin, payload: data });\r\n\r\nexport const startCheckig = () => {\r\n    return async( dispatch ) => {\r\n\r\n        const resp = await fetchWithToken('auth/renewToken');\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token );\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            \r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name,\r\n                role: body.role\r\n            }));\r\n\r\n                dispatch(finishChecking());\r\n\r\n\r\n        } else {\r\n                dispatch(finishChecking());\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const startLogout = () => {\r\n    return async( dispatch ) => {\r\n        localStorage.clear();\r\n        dispatch( clearedAreas() );\r\n        dispatch( clearedProjectsQA() );\r\n        dispatch( clearedResources() );\r\n        dispatch( logout() );\r\n    };\r\n};\r\n\r\nexport const finishChecking = () => ({ type: types.authCheckingFinish });\r\n\r\n\r\nconst logout = () => ({ type: types.authLogout});\r\n","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, setValues, reset ];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startLogin } from '../../actions/auth';\r\nimport { startLoading } from '../../actions/ui';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\n\r\nexport const LoginForm = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        email: \"frias.jorge@pyjcsystem.com.mx\",\r\n        password: \"123456\"\r\n    });\r\n\r\n    const { email, password } = formValues;\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        dispatch(startLogin(email, password));\r\n        dispatch( startLoading());\r\n    }\r\n\r\n    return (\r\n        <div className=\"form\" >\r\n            <img\r\n                src=\"https://res.cloudinary.com/dmfhnhyyj/image/upload/v1632264359/pyjc/P_JC_LOGO_1_hizbhf.png\"\r\n                alt=\"Logo-PyJC\"\r\n                className=\"form__logo\"\r\n            />\r\n            <h2 className=\"form__title\" >Iniciar sesión</h2>\r\n            <form onSubmit={handleSubmit} >\r\n                <input\r\n                    type=\"email\"\r\n                    className=\"form__input\"\r\n                    name=\"email\"\r\n                    onChange={handleInputChange}\r\n                    value={email}\r\n                    placeholder=\"Email\"\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    className=\"form__input\"\r\n                    name=\"password\"\r\n                    onChange={handleInputChange}\r\n                    value={password}\r\n                    placeholder=\"Contraseña\"\r\n                />\r\n                <button\r\n                    className=\"form__button\"\r\n                >\r\n                    Ingresar\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { LoginForm } from '../components/auth/LoginForm'\r\n\r\nexport const AuthPage = () => {\r\n    return (\r\n        <div className=\"auth\" >\r\n            <LoginForm />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const LoadingPage = () => {\r\n    return (\r\n        <div className=\"loader-container\" >\r\n            <div className=\"loader\">\r\n                <div className=\"circle\"></div>\r\n                <div className=\"circle\"></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","\r\nexport const sideBarData = [\r\n    {\r\n        \"id\": 0,\r\n        \"icon\": \"home\",\r\n        \"title\": \"Home\",\r\n        \"link\": \"/home\"\r\n    },\r\n    {\r\n        \"id\": 1,\r\n        \"icon\": \"users\",\r\n        \"title\": \"Áreas\",\r\n        \"link\": \"/areas\"\r\n    },\r\n    {\r\n        \"id\": 2,\r\n        \"icon\": \"suitcase\",\r\n        \"title\": \"Proyectos\",\r\n        \"link\": \"/projectsQA\"\r\n    },\r\n    {   \r\n        \"id\": 3,\r\n        \"icon\": \"usertie\",\r\n        \"title\": \"Recursos\",\r\n        \"link\": \"/resources\"\r\n    }\r\n]","import React from 'react';\r\nimport { FaUsers, FaSuitcase, FaUserTie, FaHome } from 'react-icons/fa';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport const SidebarItem = ({\r\n    icon,\r\n    title,\r\n    link,\r\n}) => {\r\n\r\n    return (\r\n        <Link className=\"sidebar__item\" to={link} >\r\n            {\r\n                icon === 'home' ? <FaHome className='sidebar__item-icon'/> :\r\n                icon === 'users' ? <FaUsers className='sidebar__item-icon' /> :\r\n                icon === 'suitcase' ? <FaSuitcase className='sidebar__item-icon' /> : \r\n                <FaUserTie className='sidebar__item-icon' /> \r\n            }\r\n            <p className='sidebar__item-title' >{title}</p>\r\n        </Link>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\nimport { sideBarData } from './sidebarData';\r\nimport { SidebarItem } from './SidebarItem';\r\n\r\nexport const Sidebar = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout());\r\n    }\r\n\r\n    return (\r\n        <aside className=\"sidebar\" >\r\n            <div className=\"sidebar__logo\">\r\n                <img \r\n                    src=\"https://res.cloudinary.com/dmfhnhyyj/image/upload/v1632264359/pyjc/P_JC_LOGO_1_hizbhf.png\"\r\n                    alt=\"Logo-PyJC\"\r\n                    />\r\n            </div>\r\n            <ul className=\"sidebar__list\" >\r\n                {\r\n                    sideBarData.map( sideItem => {\r\n                        return <SidebarItem key={sideItem.id} { ...sideItem } />\r\n                    })\r\n                }\r\n            </ul>\r\n            <button \r\n                className=\"sidebar__logout\"\r\n                onClick={ handleLogout }\r\n            >\r\n                Logout\r\n            </button>\r\n        </aside>\r\n    );\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startCreatedAreas, startDeleteArea, startUpdateArea } from '../actions/areas';\r\nimport { useForm } from '../hooks/useForm';\r\n\r\nexport const AreasPage = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [formValues, handleInputChange, reset] = useForm({\r\n        _id: new Date(),\r\n        name: '',\r\n        leader: '',\r\n        percentage: 0\r\n    })\r\n\r\n    const { name, leader, percentage } = formValues;\r\n\r\n    const [openModalCreate, setOpenModalCreate] = useState(false);\r\n    const [openModalUpdate, setOpenModalUpdate] = useState(false);\r\n    const [updatedId, setUpdatedId] = useState('')\r\n\r\n    const { areas } = useSelector(state => state.areas);\r\n\r\n    const handleCreate = (e) => {\r\n        e.preventDefault();\r\n        setOpenModalCreate(false);\r\n        dispatch(startCreatedAreas(formValues))\r\n        reset();\r\n    }\r\n\r\n    const handleDelete = (id) => {\r\n        dispatch(startDeleteArea(id))\r\n    }\r\n\r\n    const handleUpdateModal = (id) => {\r\n        setOpenModalUpdate(true);\r\n        setUpdatedId(id)\r\n    }\r\n\r\n    const handleUpdate = (e) => {\r\n        e.preventDefault();\r\n        dispatch( startUpdateArea( updatedId, formValues ) )\r\n        reset();\r\n        setOpenModalUpdate(false)\r\n    }\r\n\r\n    return (\r\n        <div className=\"crud\" >\r\n            <div className=\"crud-nav\" >\r\n                <h2 className=\"crud-title\" >Áreas</h2>\r\n                <button\r\n                    className=\"crud-button\"\r\n                    onClick={() => setOpenModalCreate(true)}\r\n                >\r\n                    Agregar Nueva Area\r\n                </button>\r\n            </div>\r\n            {\r\n                areas.map(area => {\r\n                    return (\r\n                        <div\r\n                            key={area._id}\r\n                            className=\"crud-item\"\r\n                        >\r\n                            <div className=\"crud-item__info\" >\r\n                                <p className=\"crud-item__name\" >\r\n                                    {\r\n                                        area.name\r\n                                    }\r\n                                </p>\r\n                                <p className=\"crud-item__leader\" >\r\n                                    {\r\n                                        `Lider:   ${area.leader}`\r\n                                    }\r\n                                </p>\r\n                                <p className=\"crud-item__percentage\" >\r\n                                    {\r\n                                        `Porcetange:   ${area.percentage}%`\r\n                                    }\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"crud-admin\">\r\n                                <button\r\n                                    className=\"crud-update-button\"\r\n                                    onClick={() => handleUpdateModal(area._id)}\r\n                                >\r\n                                    Actualizar\r\n                                </button>\r\n                                <button\r\n                                    className=\"crud-delete-button\"\r\n                                    onClick={() => handleDelete(area._id)}\r\n                                >\r\n                                    Eliminar\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n            {\r\n                openModalCreate &&\r\n                <div className=\"crud-modal-created\" >\r\n                    <h2 className=\"crud-modal__title\" >Crear Nuevo Recurso</h2>\r\n                    <form\r\n                        className=\"crud-modal-form\"\r\n                        onSubmit={handleCreate}\r\n                    >\r\n                        <label className='crud-modal__label' >\r\n                            Nombre del Área:\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            className=\"crud-modal__input\"\r\n                            onChange={handleInputChange}\r\n                            value={name}\r\n                            required\r\n                        />\r\n                        <label className='crud-modal__label' >\r\n                            Lider del Área:\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"leader\"\r\n                            className=\"crud-modal__input\"\r\n                            onChange={handleInputChange}\r\n                            value={leader}\r\n                            required\r\n                        />\r\n                        <div className=\"crud-modal-buttons\" >\r\n                            <button\r\n                                className=\"crud-modal__button-accept\"\r\n                                type=\"submit\"\r\n                            >\r\n                                Aceptar\r\n                            </button>\r\n                            <button\r\n                                className=\"crud-modal__button-cancel\"\r\n                                onClick={() => setOpenModalCreate(false)}\r\n                            >\r\n                                Cancelar\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            }\r\n            {\r\n                openModalUpdate &&\r\n                <div className=\"crud-modal-update\" >\r\n                    <h2 className=\"crud-modal__title\" >Modificar Recurso</h2>\r\n                    <form\r\n                        className=\"crud-modal-form\"\r\n                        onSubmit={ handleUpdate }\r\n                    >\r\n                        <label className='crud-modal__label' >\r\n                            Nombre del Área:\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            className=\"crud-modal__input\"\r\n                            onChange={handleInputChange}\r\n                            value={name}\r\n                            required\r\n                        />\r\n                        <label className='crud-modal__label' >\r\n                            Lider del Área:\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"leader\"\r\n                            className=\"crud-modal__input\"\r\n                            onChange={handleInputChange}\r\n                            value={leader}\r\n                            required\r\n                        />\r\n                        <input\r\n                            type=\"range\"\r\n                            name=\"percentage\"\r\n                            className=\"crud-modal__input\"\r\n                            onChange={handleInputChange}\r\n                            value={percentage}\r\n                            min=\"0\" max=\"100\"\r\n                            required\r\n                        />\r\n                        <span className=\"crud-modal__label\" >{percentage} %</span>\r\n                        <div className=\"crud-modal-buttons\" >\r\n                            <button\r\n                                className=\"crud-modal__button-accept\"\r\n                                type=\"submit\"\r\n                            >\r\n                                Actualizar\r\n                            </button>\r\n                            <button\r\n                                className=\"crud-modal__button-cancel\"\r\n                                onClick={() => setOpenModalUpdate(false)}\r\n                            >\r\n                                Cancelar\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport const CardAlerts = () => {\r\n\r\n    const { resources } = useSelector(state => state.resources);\r\n\r\n    return (\r\n        <div className=\"card-alert\">\r\n            <h3 className=\"card-title\">Recursos</h3>\r\n            {\r\n                resources.map(resource => {\r\n                    return (\r\n                        <div\r\n                            key={resource._id}\r\n                            className=\"card-resources__item\"\r\n                        >\r\n                            <p>\r\n                                {`${resource.name} ${resource.surname1} ${resource.surname2}`}\r\n                            </p>\r\n                            <p>\r\n                                { resource.role }\r\n                            </p>\r\n                        </div>)\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nexport const CardAreas = ({\r\n    percentage,\r\n    name,\r\n    leader,\r\n    _id\r\n}) => {\r\n\r\n    const [currentPercentage, setcurrentPercentage] = useState(628);\r\n\r\n    useEffect(() => {\r\n        setcurrentPercentage( 628 - (628 * (percentage / 100)) );\r\n    }, [percentage]);\r\n\r\n    \r\n\r\n    let color;\r\n\r\n    if( currentPercentage >= 420.76 ){\r\n        color = 'var(--red)';\r\n    } else if( currentPercentage < 420.76 && currentPercentage >= 214.53 ){\r\n        color = 'var(--yellow)';\r\n    } else {\r\n        color = 'var(--green)';\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"card-area\" >\r\n            <div className=\"card-area__graph-wrapper\" >\r\n                <p className=\"card-area__percent\" >{percentage}%</p>\r\n                <svg\r\n                    className=\"card-area__graph-rail\"\r\n                    viewBox=\"0 0 240 240\"\r\n                >\r\n                    <circle cx=\"120\" cy=\"120\" r=\"100\" />\r\n                </svg>\r\n                <svg\r\n                    className=\"card-area__graph-bar\"\r\n                    viewBox=\"0 0 240 240\"\r\n                >\r\n                    <circle \r\n                        cx=\"120\" \r\n                        cy=\"120\" \r\n                        r=\"100\" \r\n                        style={{'strokeDashoffset': currentPercentage, 'stroke':  color}}\r\n                    />\r\n                </svg>\r\n            </div>\r\n            <div className=\"card-area__info\">\r\n                <p className=\"card-area__title\">{name}</p>\r\n                <p className=\"card-area__subtitle\" >{leader}</p>\r\n            </div>\r\n            <button className=\"button-outline\">Ver todo</button>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nexport const CardProjectItem = ({\r\n    code,\r\n    name,\r\n    percentage\r\n}) => {\r\n\r\n    const [currentPercentage, setCurrentPercentage] = useState(0);\r\n\r\n    useEffect(()=>{\r\n        setCurrentPercentage(percentage);\r\n    },[percentage])\r\n\r\n    let color = '';\r\n\r\n    if (currentPercentage <= 35 ) {\r\n        color = 'var(--red)';\r\n    } else if (currentPercentage > 45 && currentPercentage <= 70 ) {\r\n        color = 'var(--yellow)';\r\n    } else {\r\n        color = 'var(--green)';\r\n    }\r\n\r\n    return (\r\n        <div className=\"card-project__item\" >\r\n            <div className=\"card-project__item-info\" >\r\n                <p className=\"card-project__item-code\" >{code}</p>\r\n                <p className=\"card-project__item-name\" >{name}</p>\r\n            </div>\r\n            <div className=\"card-project__item-rail\" >\r\n                <div className=\"card-project__item-bar\" style={{ width: `${currentPercentage}%`, backgroundColor: color }} />\r\n            </div>\r\n            <small className=\"card-project__item-percentage\" >{ percentage }%</small>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { CardProjectItem } from './CardProjectItem';\r\n\r\nexport const CardProject = () => {\r\n    \r\n    const { projects } = useSelector(state => state.projectsQA)\r\n\r\n    return (\r\n        <div className=\"card-project\" >\r\n            <h3 className=\"card-title\">Proyectos</h3>\r\n            {\r\n                projects.map( project => {\r\n                    return ( <CardProjectItem key={project._id} { ...project } /> )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { CardAlerts } from '../components/cardAlerts/CardAlerts';\r\nimport { CardAreas } from '../components/CardAreas';\r\nimport { CardProject } from '../components/cardProjects/CardProject';\r\n\r\nexport const HomePage = () => {\r\n    \r\n    const {areas} = useSelector(state => state.areas);\r\n\r\n\r\n    areas.sort( (a, b ) => {\r\n        return  b.percentage - a.percentage ;\r\n    });\r\n\r\n    return (\r\n        <div className=\"home\" >\r\n            <main className=\"home-content\">\r\n                <h2 className=\"title\" >Áreas</h2>\r\n                <div className=\"home__areas-list\">\r\n                    {\r\n                        areas.map( card => {\r\n                            return <CardAreas key={card._id} {...card} />\r\n                        })\r\n                    }\r\n                </div>\r\n                <section className=\"home__section\">\r\n                    <CardProject />\r\n                    <CardAlerts />\r\n                </section>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  startProjectQADelete,\r\n  startProjectsCreated,\r\n} from \"../actions/projectsQA\";\r\nimport { useForm } from \"../hooks/useForm\";\r\nimport DateTimePicker from \"react-datetime-picker\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/es\";\r\n\r\nmoment.locale(\"es\");\r\n\r\nconst now = moment();\r\nconst nowDayPlus = moment().add(1, \"day\");\r\n\r\nexport const ProjectsQAPage = () => {\r\n  const dispatch = useDispatch();\r\n  const [openModalCreate, setOpenModalCreate] = useState(false);\r\n  const [startDate, setStartDate] = useState(now.toDate());\r\n  const [endDate, setEndDate] = useState(nowDayPlus.toDate());\r\n  const [values, handleInputChange, setValues, reset] = useForm({\r\n    code: \"\",\r\n    name: \"\",\r\n    platform: \"\",\r\n    responsable: \"\",\r\n    dateStart: now.toDate(),\r\n    dateEnd: nowDayPlus.toDate(),\r\n    hours: 0,\r\n    status: \"\",\r\n    observations: \"\",\r\n    oc: \"\",\r\n    additionalHours: \"\",\r\n    pe: \"\",\r\n  });\r\n\r\n  const {\r\n    code,\r\n    name,\r\n    platform,\r\n    responsable,\r\n    hours,\r\n    status,\r\n    observations,\r\n    oc,\r\n    additionalHours,\r\n    pe,\r\n  } = values;\r\n\r\n  const handleCreate = (e) => {\r\n    e.preventDefault();\r\n    reset();\r\n    dispatch(startProjectsCreated(values));\r\n    setOpenModalCreate(false);\r\n  };\r\n\r\n  const { projects } = useSelector((state) => state.projectsQA);\r\n\r\n  const handleDelete = (id) => {\r\n    dispatch(startProjectQADelete(id));\r\n  };\r\n\r\n  const handleStartDAteChange = (e) => {\r\n    setStartDate(e);\r\n    setValues({\r\n      ...values,\r\n      dateStart: e,\r\n    });\r\n  };\r\n\r\n  const handleEndDAteChange = (e) => {\r\n    setEndDate(e);\r\n    setValues({\r\n      ...values,\r\n      dateEnd: e,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"crud\">\r\n      <div className=\"crud-nav\">\r\n        <h2 className=\"crud-title\">Projectos QA</h2>\r\n        <button\r\n          className=\"crud-button\"\r\n          onClick={() => setOpenModalCreate(true)}\r\n        >\r\n          Agregar Nuevo Projecto\r\n        </button>\r\n      </div>\r\n      {projects.map((project) => {\r\n        return (\r\n          <div key={project._id} className=\"crud-item\">\r\n            <div className=\"crud-item__info-project\">\r\n              <p className=\"crud-item__code-project\">{`${project.code}`}</p>\r\n              <p className=\"crud-item__code-project\">{project.name}</p>\r\n              <p className=\"crud-item__project-text\">\r\n                {`Plataforma:   ${project.platform}`}\r\n              </p>\r\n              <p className=\"crud-item__project-text\">\r\n                {`Estatus:   ${project.status}`}\r\n              </p>\r\n              <p className=\"crud-item__project-text\">\r\n                {`Observaciones:   ${project.observations}`}\r\n              </p>\r\n              <p className=\"crud-item__project-text\">{`OC:   ${project.oc}`}</p>\r\n              <p className=\"crud-item__project-text\">\r\n                {`Horas Adicionales:   ${project.additionalHours}`}\r\n              </p>\r\n              <p className=\"crud-item__project-text\">{`P.E. :   ${project.pe}`}</p>\r\n              <p className=\"crud-item__project-text\">{`Fecha de inicio:   ${moment(\r\n                project.dateStart\r\n              ).format(\"LL\")}`}</p>\r\n              <p className=\"crud-item__project-text\">{`Fecha final:   ${moment(\r\n                project.dateEnd\r\n              ).format(\"LL\")}`}</p>\r\n            </div>\r\n            <div className=\"crud-admin\">\r\n              {/* <button className=\"crud-update-button\">Actualizar</button> */}\r\n              <button\r\n                className=\"crud-delete-button\"\r\n                onClick={() => handleDelete(project._id)}\r\n              >\r\n                Eliminar\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n      {openModalCreate && (\r\n        <div className=\"modal\">\r\n          <h2 className=\"modal-title\">Crear un nuevo proyecto</h2>\r\n          <form\r\n            className=\"crud-modal-form\"\r\n            onSubmit={handleCreate}\r\n            autoComplete=\"off\"\r\n          >\r\n            <div className=\"crud-modal__wrapper\">\r\n              <div className=\"crud-modal__info\">\r\n                <label className=\"crud-modal__label\">Clave del proyecto:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"code\"\r\n                  className=\"crud-modal__input\"\r\n                  onChange={handleInputChange}\r\n                  value={code}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"crud-modal__info\">\r\n                <label className=\"crud-modal__label\">\r\n                  Nombre del proyecto:\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  className=\"crud-modal__input\"\r\n                  onChange={handleInputChange}\r\n                  value={name}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"crud-modal__wrapper\">\r\n              <div className=\"crud-modal__info\">\r\n                <label className=\"crud-modal__label\">Plataforma:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"platform\"\r\n                  className=\"crud-modal__input\"\r\n                  onChange={handleInputChange}\r\n                  value={platform}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"crud-modal__info\">\r\n                <label className=\"crud-modal__label\">\r\n                  Responsable del proyecto:\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"responsable\"\r\n                  className=\"crud-modal__input\"\r\n                  onChange={handleInputChange}\r\n                  value={responsable}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"crud-modal__wrapper\">\r\n              <div className=\"crud-modal__info\">\r\n                <label className=\"crud-modal__label\">Fecha de inicio:</label>\r\n                <DateTimePicker\r\n                  onChange={handleStartDAteChange}\r\n                  value={startDate}\r\n                  format=\"dd-MM-yyyy\"\r\n                  className=\"crud-modal__input\"\r\n                />\r\n              </div>\r\n              <div className=\"crud-modal__info\">\r\n                <label className=\"crud-modal__label\">Fecha de final:</label>\r\n                <DateTimePicker\r\n                  onChange={handleEndDAteChange}\r\n                  value={endDate}\r\n                  minDate={startDate}\r\n                  format=\"dd-MM-yyyy\"\r\n                  className=\"crud-modal__input\"\r\n                />\r\n              </div>\r\n              <div className=\"crud-modal__info\" id=\"modal_hours\">\r\n                <label className=\"crud-modal__label\">Horas:</label>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"hours\"\r\n                  className=\"crud-modal__input\"\r\n                  onChange={handleInputChange}\r\n                  value={hours}\r\n                  id=\"modal_hours__input\"\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"crud-modal__wrapper\">\r\n              <div className=\"crud-modal__info\">\r\n                <label className=\"crud-modal__label\">Estatus:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"status\"\r\n                  className=\"crud-modal__input\"\r\n                  onChange={handleInputChange}\r\n                  value={status}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"crud-modal__info\">\r\n                <label className=\"crud-modal__label\">Horas Adicionales:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"additionalHours\"\r\n                  className=\"crud-modal__input\"\r\n                  onChange={handleInputChange}\r\n                  value={additionalHours}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n            <label className=\"crud-modal__label\">Observaciones:</label>\r\n            <textarea\r\n              type=\"text-area\"\r\n              name=\"observations\"\r\n              className=\"crud-modal__input\"\r\n              onChange={handleInputChange}\r\n              value={observations}\r\n              required\r\n            />\r\n            <div className=\"crud-modal__wrapper\">\r\n              <div className=\"crud-modal__info\">\r\n                <label className=\"crud-modal__label\">OC:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"oc\"\r\n                  className=\"crud-modal__input\"\r\n                  onChange={handleInputChange}\r\n                  value={oc}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"crud-modal__info\">\r\n                <label className=\"crud-modal__label\">P.E. :</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"pe\"\r\n                  className=\"crud-modal__input\"\r\n                  onChange={handleInputChange}\r\n                  value={pe}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"crud-modal-buttons\">\r\n              <button className=\"crud-modal__button-accept\" type=\"submit\">\r\n                Aceptar\r\n              </button>\r\n              <button\r\n                className=\"crud-modal__button-cancel\"\r\n                onClick={() => setOpenModalCreate(false)}\r\n              >\r\n                Cancelar\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startCreatedResources, startDeleteResource, startUpdateResource } from '../actions/resources';\r\nimport { useForm } from '../hooks/useForm';\r\n\r\nexport const ResourcesPage = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [formValues, handleInputChange, reset] = useForm({\r\n        _id: new Date(),\r\n        name: '',\r\n        surname1: '',\r\n        surname2: '',\r\n        area: '6171b485e9eaa5ec213e795c',\r\n        role: '',\r\n        subArea: ''\r\n    })\r\n\r\n    const { name, surname1, surname2, role } = formValues;\r\n\r\n    const [openModalCreate, setOpenModalCreate] = useState(false);\r\n    const [openModalUpdate, setOpenModalUpdate] = useState(false);\r\n    const [updatedId, setUpdatedId] = useState('')\r\n\r\n    const { resources } = useSelector(state => state.resources)\r\n\r\n    const handleCreate = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startCreatedResources(formValues))\r\n        setOpenModalCreate(false);\r\n        reset();\r\n    }\r\n\r\n    const handleDelete = (id) => {\r\n        dispatch(startDeleteResource(id))\r\n    }\r\n\r\n    const handleUpdateModal = (id) => {\r\n        setOpenModalUpdate(true);\r\n        setUpdatedId(id)\r\n    }\r\n\r\n    const handleUpdate = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startUpdateResource(updatedId, formValues))\r\n        reset();\r\n        setOpenModalUpdate(false)\r\n    }\r\n\r\n    return (\r\n        <div className=\"crud\" >\r\n            <div className=\"crud-nav\" >\r\n                <h2 className=\"crud-title\" >Recursos</h2>\r\n                <button\r\n                    className=\"crud-button\"\r\n                    onClick={() => setOpenModalCreate(true)}\r\n                >\r\n                    Agregar Nuevo Recurso\r\n                </button>\r\n            </div>\r\n            {\r\n                resources.map(resources => {\r\n                    return (\r\n                        <div\r\n                            key={resources._id}\r\n                            className=\"crud-item\"\r\n                        >\r\n                            <div className=\"crud-item__info\" >\r\n                                <p className=\"crud-item__name\" >\r\n                                    {\r\n                                        `${resources.name} ${resources.surname1} ${resources.surname2}`\r\n                                    }\r\n                                </p>\r\n                                <p className=\"crud-item__leader\" >\r\n                                    {\r\n                                        `Area:   ${resources.subArea}`\r\n                                    }\r\n                                </p>\r\n                                <p className=\"crud-item__percentage\" >\r\n                                    {\r\n                                        `Rol:   ${resources.role}`\r\n                                    }\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"crud-admin\">\r\n                                <button\r\n                                    className=\"crud-update-button\"\r\n                                    onClick={() => handleUpdateModal(resources._id)}\r\n                                >\r\n                                    Actualizar\r\n                                </button>\r\n                                <button\r\n                                    className=\"crud-delete-button\"\r\n                                    onClick={() => handleDelete(resources._id)}\r\n                                >\r\n                                    Eliminar\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n            {\r\n                openModalCreate &&\r\n                <div className=\"crud-modal-created\" >\r\n                    <h2 className=\"crud-modal__title\" >Crear Nuevo Recurso</h2>\r\n                    <form\r\n                        className=\"crud-modal-form\"\r\n                        onSubmit={handleCreate}\r\n                    >\r\n                        <label className='crud-modal__label' >\r\n                            Nombre:\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            className=\"crud-modal__input\"\r\n                            onChange={handleInputChange}\r\n                            value={name}\r\n                            required\r\n                        />\r\n                        <label className='crud-modal__label' >\r\n                            Apellido1:\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"surname1\"\r\n                            className=\"crud-modal__input\"\r\n                            onChange={handleInputChange}\r\n                            value={surname1}\r\n                            required\r\n                        />\r\n                        <label className='crud-modal__label' >\r\n                            Apellido2:\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"surname2\"\r\n                            className=\"crud-modal__input\"\r\n                            onChange={handleInputChange}\r\n                            value={surname2}\r\n                            required\r\n                        />\r\n                        <label className='crud-modal__label' >\r\n                            Rol:\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"role\"\r\n                            className=\"crud-modal__input\"\r\n                            onChange={handleInputChange}\r\n                            value={role}\r\n                            required\r\n                        />\r\n                        <div className=\"crud-modal-buttons\" >\r\n                            <button\r\n                                className=\"crud-modal__button-accept\"\r\n                                type=\"submit\"\r\n                            >\r\n                                Aceptar\r\n                            </button>\r\n                            <button\r\n                                className=\"crud-modal__button-cancel\"\r\n                                onClick={() => setOpenModalCreate(false)}\r\n                            >\r\n                                Cancelar\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            }\r\n            {\r\n                openModalUpdate &&\r\n                <div className=\"crud-modal-update\" >\r\n                    <h2 className=\"crud-modal__title\" >Modificar Recurso</h2>\r\n                    <form\r\n                        className=\"crud-modal-form\"\r\n                        onSubmit={ handleUpdate }\r\n                    >\r\n                        <label className='crud-modal__label' >\r\n                            Nombre:\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            className=\"crud-modal__input\"\r\n                            onChange={handleInputChange}\r\n                            value={name}\r\n                            required\r\n                        />\r\n                        <label className='crud-modal__label' >\r\n                            Apellido1:\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"surname1\"\r\n                            className=\"crud-modal__input\"\r\n                            onChange={handleInputChange}\r\n                            value={surname1}\r\n                            required\r\n                        />\r\n                        <label className='crud-modal__label' >\r\n                            Apellido2:\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"surname2\"\r\n                            className=\"crud-modal__input\"\r\n                            onChange={handleInputChange}\r\n                            value={surname2}\r\n                            required\r\n                        />\r\n                        <label className='crud-modal__label' >\r\n                            Rol:\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"role\"\r\n                            className=\"crud-modal__input\"\r\n                            onChange={handleInputChange}\r\n                            value={role}\r\n                            required\r\n                        />\r\n                        <div className=\"crud-modal-buttons\" >\r\n                            <button\r\n                                className=\"crud-modal__button-accept\"\r\n                                type=\"submit\"\r\n                            >\r\n                                Actualizar\r\n                            </button>\r\n                            <button\r\n                                className=\"crud-modal__button-cancel\"\r\n                                onClick={() => setOpenModalUpdate(false)}\r\n                            >\r\n                                Cancelar\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\nimport { areasStartLoading } from '../actions/areas';\r\nimport { projectsQAStartLoading } from '../actions/projectsQA';\r\nimport { resourcesAllStartLoading } from '../actions/resources';\r\nimport { Sidebar } from '../components/shared/Sidebar';\r\nimport { AreasPage } from '../pages/AreasPage';\r\nimport { HomePage } from '../pages/HomePage';\r\nimport { ProjectsQA } from '../pages/ProjectsQA';\r\nimport { ProjectsQAPage } from '../pages/ProjectsQAPage';\r\nimport { ResourcesPage } from '../pages/ResourcesPage';\r\n\r\nexport const Dashboard = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(areasStartLoading());\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        dispatch(resourcesAllStartLoading());\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        dispatch(projectsQAStartLoading());\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <Router>\r\n            <div style={{ 'display': 'flex'}} >\r\n                <Sidebar />\r\n                <Switch>\r\n                    <Route exact path=\"/home\" component={HomePage} />\r\n                    <Route exact path=\"/areas\" component={AreasPage} />\r\n                    <Route exact path=\"/resources\" component={ResourcesPage} />\r\n                    <Route exact path=\"/projectsQA\" component={ProjectsQAPage } />\r\n                    <Redirect to=\"/home\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    \n    localStorage.setItem('lastPath', rest.location.pathname);\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/auth\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( !isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/\" /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\nimport { startCheckig } from '../actions/auth';\r\nimport { AuthPage } from '../pages/AuthPage';\r\nimport { LoadingPage } from '../pages/LoadingPage';\r\nimport { Dashboard } from './Dashboard';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const RouterApp = () => {\r\n    \r\n    const { uid } = useSelector(state => state.auth);\r\n    const { loading } = useSelector(state => state.ui);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch( startCheckig());\r\n    },[dispatch]);\r\n\r\n    if (loading) {\r\n        return <LoadingPage />\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute \r\n                        exact \r\n                        path=\"/auth\" \r\n                        component={AuthPage}\r\n                        isAuthenticated={ !!uid } \r\n                    />\r\n                    <PrivateRoute \r\n                        path=\"/\" \r\n                        component={ Dashboard } \r\n                        isAuthenticated={ !!uid } \r\n                    />\r\n                    <Redirect to=\"/auth\" />\r\n                </Switch>\r\n            </div>\r\n        </Router> \r\n    )\r\n}\r\n\r\n\r\n\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    areas: []\r\n}\r\n\r\nexport const areasReducer = ( state = initialState, action) => {\r\n    \r\n    switch ( action.type ) {\r\n        case types.areasLoaded:\r\n            return {\r\n                ...state,\r\n                areas: [...action.payload]\r\n            }\r\n        case types.areasCleared:\r\n            return {\r\n                areas: []\r\n            }\r\n\r\n        case types.areasDeleted:\r\n            console.log('delete action', action.payload)\r\n            return {\r\n                ...state,\r\n                areas: state.areas.filter(\r\n                    area => ( area._id !== action.payload )\r\n                )\r\n            }\r\n        case types.areasCreated:\r\n            return {\r\n                ...state,\r\n                areas: [\r\n                    ...state.areas,\r\n                    action.payload\r\n                ]\r\n            }\r\n        case types.areasUpdated:\r\n            return {\r\n                ...state,\r\n                areas: state.areas.map( \r\n                    a => ( a._id === action.payload._id ) ? action.payload : a \r\n                )\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    cheking: true\r\n}\r\n\r\nexport const authReducer = (state= initialState, action) => {\r\n    \r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                cheking: false\r\n            }\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                cheking: false\r\n            };\r\n        case types.authLogout:\r\n            return {\r\n                cheking: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    projects: []\r\n}\r\n\r\nexport const projectsQAReducer = ( state = initialState, action) => {\r\n    \r\n    switch (action.type) {\r\n        case types.projectsQALoaded:\r\n            return {\r\n                ...state,\r\n                projects: [ ...action.payload ]\r\n            }\r\n        \r\n        case types.projectsQACleared:\r\n            return {\r\n                projects: []\r\n            }\r\n            \r\n        case types.projectsQADeleted:\r\n            return {\r\n                ...state,\r\n                projects: state.projects.filter(\r\n                    p => p._id !== action.payload\r\n                )\r\n            }\r\n        case types.projectsQACreated:\r\n            return {\r\n                ...state,\r\n                projects: [\r\n                    action.payload,\r\n                    ...state.projects\r\n                ]\r\n            }\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    resources: []\r\n}\r\n\r\nexport const resourcesReducer = ( state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.resourcesAllLoaded:\r\n            return{\r\n                ...state,\r\n                resources: [ ...action.payload ]\r\n            }\r\n        \r\n        case types.resourcesCleared:\r\n            return {\r\n                ...state,\r\n                resources: []\r\n            }\r\n\r\n        case types.resourcesDeleted:\r\n            return {\r\n                ...state,\r\n                resources: state.resources.filter(\r\n                    r => ( r._id !== action.payload )\r\n                )\r\n            }\r\n        case types.resourcesCreated:\r\n            return {\r\n                ...state,\r\n                resources: [\r\n                    ...state.resources,\r\n                    action.payload\r\n                ]\r\n            }\r\n            case types.resourcesUpdated:\r\n                return {\r\n                    ...state,\r\n                    resources: state.resources.map( \r\n                        r => ( r._id === action.payload._id ) ? action.payload : r \r\n                    )\r\n                }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { areasReducer } from \"./areasReducer\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { projectsQAReducer } from \"./projectsQAReducer\";\r\nimport { resourcesReducer } from \"./resourcesReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    auth: authReducer,\r\n    areas: areasReducer,\r\n    projectsQA: projectsQAReducer,\r\n    resources: resourcesReducer,\r\n});","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n)","\r\nimport React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { RouterApp } from './router/RouterApp';\r\nimport { store } from './store/store';\r\n\r\nconst App = () => {\r\n    return (\r\n        <>\r\n            <Provider store={store} >\r\n                <RouterApp />\r\n            </Provider>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './styles/styles.css';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}